nohup: ignoring input
You are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
2024-09-17 07:51:02,379 - INFO - Using device: cuda
2024-09-17 07:51:02,379 - INFO - Testing model: roberta, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:07,422 - INFO - Completed testing roberta, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:07,422 - INFO - Test Loss: 0.6290, Accuracy: 0.6742
2024-09-17 07:51:07,422 - INFO - Testing model: roberta, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:11,670 - INFO - Completed testing roberta, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:11,670 - INFO - Test Loss: 0.5643, Accuracy: 0.7418
2024-09-17 07:51:11,670 - INFO - Testing model: roberta, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:16,082 - INFO - Completed testing roberta, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:16,082 - INFO - Test Loss: 0.6408, Accuracy: 0.6516
2024-09-17 07:51:16,082 - INFO - Testing model: roberta, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:20,381 - INFO - Completed testing roberta, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:20,381 - INFO - Test Loss: 0.5897, Accuracy: 0.7090
2024-09-17 07:51:20,381 - INFO - Testing model: roberta, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:24,627 - INFO - Completed testing roberta, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:24,627 - INFO - Test Loss: 0.5758, Accuracy: 0.7172
2024-09-17 07:51:24,627 - INFO - Testing model: roberta, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:28,864 - INFO - Completed testing roberta, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:28,865 - INFO - Test Loss: 0.5384, Accuracy: 0.7418
2024-09-17 07:51:28,865 - INFO - Testing model: albert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:33,327 - INFO - Completed testing albert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:33,327 - INFO - Test Loss: 0.3815, Accuracy: 0.8443
2024-09-17 07:51:33,327 - INFO - Testing model: albert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:37,887 - INFO - Completed testing albert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:37,887 - INFO - Test Loss: 0.3697, Accuracy: 0.8607
2024-09-17 07:51:37,887 - INFO - Testing model: albert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:42,505 - INFO - Completed testing albert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:42,506 - INFO - Test Loss: 0.4010, Accuracy: 0.8361
2024-09-17 07:51:42,506 - INFO - Testing model: albert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:46,983 - INFO - Completed testing albert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:46,984 - INFO - Test Loss: 0.3735, Accuracy: 0.8463
2024-09-17 07:51:46,984 - INFO - Testing model: albert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:51,534 - INFO - Completed testing albert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:51,534 - INFO - Test Loss: 0.5776, Accuracy: 0.7275
2024-09-17 07:51:51,534 - INFO - Testing model: albert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:56,089 - INFO - Completed testing albert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:51:56,089 - INFO - Test Loss: 0.5796, Accuracy: 0.7234
2024-09-17 07:51:56,089 - INFO - Testing model: distilbert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:51:58,572 - INFO - Completed testing distilbert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:51:58,572 - INFO - Test Loss: 0.4786, Accuracy: 0.7910
2024-09-17 07:51:58,572 - INFO - Testing model: distilbert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:01,039 - INFO - Completed testing distilbert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:01,039 - INFO - Test Loss: 0.4667, Accuracy: 0.7971
2024-09-17 07:52:01,039 - INFO - Testing model: distilbert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:03,528 - INFO - Completed testing distilbert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:03,528 - INFO - Test Loss: 0.4959, Accuracy: 0.7684
2024-09-17 07:52:03,528 - INFO - Testing model: distilbert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:06,015 - INFO - Completed testing distilbert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:06,016 - INFO - Test Loss: 0.4825, Accuracy: 0.7766
2024-09-17 07:52:06,016 - INFO - Testing model: distilbert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:08,506 - INFO - Completed testing distilbert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:08,506 - INFO - Test Loss: 0.5360, Accuracy: 0.7377
2024-09-17 07:52:08,506 - INFO - Testing model: distilbert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:10,993 - INFO - Completed testing distilbert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:10,993 - INFO - Test Loss: 0.5654, Accuracy: 0.7131
2024-09-17 07:52:10,993 - INFO - Testing model: bert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:15,037 - INFO - Completed testing bert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:15,037 - INFO - Test Loss: 0.5476, Accuracy: 0.7725
2024-09-17 07:52:15,037 - INFO - Testing model: bert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:18,782 - INFO - Completed testing bert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:18,782 - INFO - Test Loss: 0.5420, Accuracy: 0.7766
2024-09-17 07:52:18,782 - INFO - Testing model: bert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:22,564 - INFO - Completed testing bert, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:22,564 - INFO - Test Loss: 0.5754, Accuracy: 0.7316
2024-09-17 07:52:22,564 - INFO - Testing model: bert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:26,361 - INFO - Completed testing bert, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:26,361 - INFO - Test Loss: 0.5579, Accuracy: 0.7582
2024-09-17 07:52:26,361 - INFO - Testing model: bert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:30,130 - INFO - Completed testing bert, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:30,130 - INFO - Test Loss: 0.8133, Accuracy: 0.6045
2024-09-17 07:52:30,130 - INFO - Testing model: bert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:33,968 - INFO - Completed testing bert, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:33,968 - INFO - Test Loss: 0.8094, Accuracy: 0.6045
2024-09-17 07:52:33,968 - INFO - Testing model: electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:35,593 - INFO - Completed testing electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:35,593 - INFO - Test Loss: 0.8705, Accuracy: 0.4611
2024-09-17 07:52:35,593 - INFO - Testing model: electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:37,157 - INFO - Completed testing electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:37,157 - INFO - Test Loss: 0.8677, Accuracy: 0.4652
2024-09-17 07:52:37,157 - INFO - Testing model: electra_small_discriminator, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:38,712 - INFO - Completed testing electra_small_discriminator, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:38,712 - INFO - Test Loss: 0.9026, Accuracy: 0.4795
2024-09-17 07:52:38,712 - INFO - Testing model: electra_small_discriminator, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:40,277 - INFO - Completed testing electra_small_discriminator, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:40,277 - INFO - Test Loss: 0.8890, Accuracy: 0.4611
2024-09-17 07:52:40,277 - INFO - Testing model: electra_small_discriminator, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:41,837 - INFO - Completed testing electra_small_discriminator, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:41,838 - INFO - Test Loss: 0.7479, Accuracy: 0.4980
2024-09-17 07:52:41,838 - INFO - Testing model: electra_small_discriminator, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:43,385 - INFO - Completed testing electra_small_discriminator, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:43,385 - INFO - Test Loss: 0.7880, Accuracy: 0.4918
2024-09-17 07:52:43,385 - INFO - Testing model: t5, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:45,484 - INFO - Completed testing t5, run_type=sentiment_naive_baseline, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:45,484 - INFO - Test Loss: 0.7292, Accuracy: 0.5164
2024-09-17 07:52:45,484 - INFO - Testing model: t5, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:47,519 - INFO - Completed testing t5, run_type=sentiment_naive_baseline, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:47,519 - INFO - Test Loss: 0.7370, Accuracy: 0.4918
2024-09-17 07:52:47,519 - INFO - Testing model: t5, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:49,657 - INFO - Completed testing t5, run_type=regularized, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:49,657 - INFO - Test Loss: 0.7189, Accuracy: 0.5184
2024-09-17 07:52:49,657 - INFO - Testing model: t5, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:51,707 - INFO - Completed testing t5, run_type=regularized, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:51,707 - INFO - Test Loss: 0.7339, Accuracy: 0.5061
2024-09-17 07:52:51,707 - INFO - Testing model: t5, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:53,830 - INFO - Completed testing t5, run_type=causal_phrases, original_epochs=5, dataset=CF Test Ltd Paper
2024-09-17 07:52:53,831 - INFO - Test Loss: 0.4619, Accuracy: 0.7664
2024-09-17 07:52:53,831 - INFO - Testing model: t5, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:52:55,960 - INFO - Completed testing t5, run_type=causal_phrases, original_epochs=10, dataset=CF Test Ltd Paper
2024-09-17 07:52:55,960 - INFO - Test Loss: 0.6322, Accuracy: 0.7602
2024-09-17 07:52:55,960 - INFO - Testing model: roberta, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:01,849 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:02,689 - INFO - Completed testing roberta, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:53:02,689 - INFO - Test Loss: 0.2951, Accuracy: 0.9009
2024-09-17 07:53:02,689 - INFO - Testing model: roberta, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:08,547 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:09,383 - INFO - Completed testing roberta, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:53:09,383 - INFO - Test Loss: 0.1811, Accuracy: 0.9486
2024-09-17 07:53:09,383 - INFO - Testing model: roberta, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:15,261 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:16,098 - INFO - Completed testing roberta, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:53:16,098 - INFO - Test Loss: 0.3066, Accuracy: 0.8996
2024-09-17 07:53:16,098 - INFO - Testing model: roberta, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:21,985 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:22,822 - INFO - Completed testing roberta, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:53:22,822 - INFO - Test Loss: 0.2127, Accuracy: 0.9364
2024-09-17 07:53:22,822 - INFO - Testing model: roberta, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:28,796 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:29,638 - INFO - Completed testing roberta, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:53:29,638 - INFO - Test Loss: 0.2832, Accuracy: 0.9437
2024-09-17 07:53:29,638 - INFO - Testing model: roberta, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:35,490 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:36,334 - INFO - Completed testing roberta, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:53:36,334 - INFO - Test Loss: 0.2626, Accuracy: 0.9400
2024-09-17 07:53:36,334 - INFO - Testing model: albert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:42,744 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:43,700 - INFO - Completed testing albert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:53:43,700 - INFO - Test Loss: 0.1323, Accuracy: 0.9670
2024-09-17 07:53:43,700 - INFO - Testing model: albert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:50,071 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:51,025 - INFO - Completed testing albert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:53:51,026 - INFO - Test Loss: 0.1352, Accuracy: 0.9621
2024-09-17 07:53:51,026 - INFO - Testing model: albert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:53:57,455 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:53:58,411 - INFO - Completed testing albert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:53:58,411 - INFO - Test Loss: 0.1585, Accuracy: 0.9596
2024-09-17 07:53:58,411 - INFO - Testing model: albert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:04,753 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:05,711 - INFO - Completed testing albert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:05,711 - INFO - Test Loss: 0.1349, Accuracy: 0.9670
2024-09-17 07:54:05,711 - INFO - Testing model: albert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:12,148 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:13,106 - INFO - Completed testing albert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:54:13,106 - INFO - Test Loss: 0.4103, Accuracy: 0.8188
2024-09-17 07:54:13,106 - INFO - Testing model: albert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:19,549 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:20,507 - INFO - Completed testing albert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:20,507 - INFO - Test Loss: 0.3836, Accuracy: 0.8335
2024-09-17 07:54:20,507 - INFO - Testing model: distilbert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:23,979 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:24,455 - INFO - Completed testing distilbert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:54:24,456 - INFO - Test Loss: 0.1389, Accuracy: 0.9694
2024-09-17 07:54:24,456 - INFO - Testing model: distilbert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:28,022 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:28,495 - INFO - Completed testing distilbert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:28,495 - INFO - Test Loss: 0.1278, Accuracy: 0.9718
2024-09-17 07:54:28,495 - INFO - Testing model: distilbert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:31,895 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:32,368 - INFO - Completed testing distilbert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:54:32,368 - INFO - Test Loss: 0.1674, Accuracy: 0.9621
2024-09-17 07:54:32,368 - INFO - Testing model: distilbert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:35,948 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:36,424 - INFO - Completed testing distilbert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:36,424 - INFO - Test Loss: 0.1440, Accuracy: 0.9670
2024-09-17 07:54:36,424 - INFO - Testing model: distilbert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:39,812 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:40,285 - INFO - Completed testing distilbert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:54:40,285 - INFO - Test Loss: 0.2782, Accuracy: 0.9021
2024-09-17 07:54:40,285 - INFO - Testing model: distilbert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:43,679 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:44,152 - INFO - Completed testing distilbert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:44,152 - INFO - Test Loss: 0.2992, Accuracy: 0.8752
2024-09-17 07:54:44,152 - INFO - Testing model: bert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:49,344 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:50,091 - INFO - Completed testing bert, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:54:50,091 - INFO - Test Loss: 0.2273, Accuracy: 0.9094
2024-09-17 07:54:50,091 - INFO - Testing model: bert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:54:55,257 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:54:56,002 - INFO - Completed testing bert, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:54:56,002 - INFO - Test Loss: 0.1897, Accuracy: 0.9400
2024-09-17 07:54:56,002 - INFO - Testing model: bert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:01,243 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:01,990 - INFO - Completed testing bert, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:01,990 - INFO - Test Loss: 0.2917, Accuracy: 0.8752
2024-09-17 07:55:01,990 - INFO - Testing model: bert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:07,305 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:08,051 - INFO - Completed testing bert, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:08,051 - INFO - Test Loss: 0.2566, Accuracy: 0.9009
2024-09-17 07:55:08,052 - INFO - Testing model: bert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:13,232 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:13,978 - INFO - Completed testing bert, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:13,978 - INFO - Test Loss: 0.6776, Accuracy: 0.6389
2024-09-17 07:55:13,978 - INFO - Testing model: bert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:19,193 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:19,939 - INFO - Completed testing bert, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:19,939 - INFO - Test Loss: 0.6890, Accuracy: 0.6316
2024-09-17 07:55:19,939 - INFO - Testing model: electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:21,960 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:22,201 - INFO - Completed testing electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:22,201 - INFO - Test Loss: 0.7211, Accuracy: 0.5716
2024-09-17 07:55:22,201 - INFO - Testing model: electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:24,222 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:24,463 - INFO - Completed testing electra_small_discriminator, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:24,463 - INFO - Test Loss: 0.6626, Accuracy: 0.6132
2024-09-17 07:55:24,463 - INFO - Testing model: electra_small_discriminator, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:26,482 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:26,719 - INFO - Completed testing electra_small_discriminator, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:26,719 - INFO - Test Loss: 0.8516, Accuracy: 0.5043
2024-09-17 07:55:26,719 - INFO - Testing model: electra_small_discriminator, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:28,766 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:29,009 - INFO - Completed testing electra_small_discriminator, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:29,009 - INFO - Test Loss: 0.8033, Accuracy: 0.5337
2024-09-17 07:55:29,009 - INFO - Testing model: electra_small_discriminator, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:31,020 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:31,258 - INFO - Completed testing electra_small_discriminator, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:31,258 - INFO - Test Loss: 0.6654, Accuracy: 0.5569
2024-09-17 07:55:31,258 - INFO - Testing model: electra_small_discriminator, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/venv/lib/python3.10/site-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884
  warnings.warn(
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:33,277 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:33,516 - INFO - Completed testing electra_small_discriminator, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:33,516 - INFO - Test Loss: 0.7273, Accuracy: 0.5214
2024-09-17 07:55:33,516 - INFO - Testing model: t5, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:36,219 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:36,521 - INFO - Completed testing t5, run_type=sentiment_naive_baseline, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:36,521 - INFO - Test Loss: 0.6075, Accuracy: 0.6475
2024-09-17 07:55:36,521 - INFO - Testing model: t5, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:39,255 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:39,558 - INFO - Completed testing t5, run_type=sentiment_naive_baseline, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:39,558 - INFO - Test Loss: 0.5840, Accuracy: 0.6781
2024-09-17 07:55:39,558 - INFO - Testing model: t5, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:42,149 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:42,449 - INFO - Completed testing t5, run_type=regularized, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:42,449 - INFO - Test Loss: 0.5834, Accuracy: 0.6744
2024-09-17 07:55:42,449 - INFO - Testing model: t5, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:45,131 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:45,434 - INFO - Completed testing t5, run_type=regularized, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:45,434 - INFO - Test Loss: 0.5735, Accuracy: 0.6989
2024-09-17 07:55:45,434 - INFO - Testing model: t5, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:48,269 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:48,568 - INFO - Completed testing t5, run_type=causal_phrases, original_epochs=5, dataset=OOD Sentiment
2024-09-17 07:55:48,568 - INFO - Test Loss: 0.1248, Accuracy: 0.9706
2024-09-17 07:55:48,568 - INFO - Testing model: t5, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
/home/b-rmadhavan/projects/causal-vs-correlated-classification/models/model_utilities.py:7: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path))
2024-09-17 07:55:51,142 - WARNING - NaN sentiment value found at index 735. Defaulting to Negative.
2024-09-17 07:55:51,443 - INFO - Completed testing t5, run_type=causal_phrases, original_epochs=10, dataset=OOD Sentiment
2024-09-17 07:55:51,443 - INFO - Test Loss: 0.0883, Accuracy: 0.9804
2024-09-17 07:55:51,443 - INFO - Testing completed. Results saved to outputs/ood_sentiment_test/results_20240917_075102.csv
